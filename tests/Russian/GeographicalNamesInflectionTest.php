<?php
namespace morhos\test\Russian;

require_once __DIR__.'/../../vendor/autoload.php';

use morphos\Russian\Cases;
use morphos\Russian\GeographicalNamesInflection;

class GeographicalNamesInflectionTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @dataProvider wordsProvider
     */
    public function testInflection($word, $case2, $case3, $case4, $case5, $case6)
    {
        $this->assertEquals([
            Cases::IMENIT => $word,
            Cases::RODIT => $case2,
            Cases::DAT => $case3,
            Cases::VINIT => $case4,
            Cases::TVORIT => $case5,
            Cases::PREDLOJ => $case6,
        ], GeographicalNamesInflection::getCases($word));
    }

    public function wordsProvider()
    {
        return array(
            ['Москва', 'Москвы', 'Москве', 'Москву', 'Москвой', 'о Москве'],
            ['Киев', 'Киева', 'Киеву', 'Киев', 'Киевом', 'о Киеве'],
            ['Ишимбай', 'Ишимбая', 'Ишимбаю', 'Ишимбай', 'Ишимбаем', 'об Ишимбае'],
            ['Африка', 'Африки', 'Африке', 'Африку', 'Африкой', 'об Африке'],
            ['Уругвай', 'Уругвая', 'Уругваю', 'Уругвай', 'Уругваем', 'об Уругвае'],
            ['Европа', 'Европы', 'Европе', 'Европу', 'Европой', 'о Европе'],
            ['Азия', 'Азии', 'Азии', 'Азию', 'Азией', 'об Азии'],
            ['Рига', 'Риги', 'Риге', 'Ригу', 'Ригой', 'о Риге'],
            ['Волга', 'Волги', 'Волге', 'Волгу', 'Волгой', 'о Волге'],
            ['Ставрополь', 'Ставрополя', 'Ставрополю', 'Ставрополь', 'Ставрополем', 'о Ставрополе'],
            ['Тверь', 'Твери', 'Твери', 'Тверь', 'Тверью', 'о Твери'],
            ['Ессентуки', 'Ессентуков', 'Ессентукам', 'Ессентуки', 'Ессентуками', 'о Ессентуках'],
            ['Пермь', 'Перми', 'Перми', 'Пермь', 'Пермью', 'о Перми'],
            ['Рязань', 'Рязани', 'Рязани', 'Рязань', 'Рязанью', 'о Рязани'],
            ['Осташков', 'Осташкова', 'Осташкову', 'Осташков', 'Осташковым', 'об Осташкове'],
            ['Грозный', 'Грозного', 'Грозному', 'Грозный', 'Грозным', 'о Грозном'],
            ['Благодарный', 'Благодарного', 'Благодарному', 'Благодарный', 'Благодарным', 'о Благодарном'],

            // сложные названия
            ['Санкт-Петербург', 'Санкт-Петербурга', 'Санкт-Петербургу', 'Санкт-Петербург', 'Санкт-Петербургом', 'о Санкт-Петербурге'],
            ['Нижний Новгород', 'Нижнего Новгорода', 'Нижнему Новгороду', 'Нижний Новгород', 'Нижним Новгородом', 'о Нижнем Новгороде'],
            ['Набережные Челны', 'Набережных Челнов', 'Набережным Челнам', 'Набережные Челны', 'Набережными Челнами', 'о Набережных Челнах'],

            // неизменяемые названия
            ['США', 'США', 'США', 'США', 'США', 'о США'],
            ['ОАЭ', 'ОАЭ', 'ОАЭ', 'ОАЭ', 'ОАЭ', 'об ОАЭ'],
        );
    }

    /**
     * @dataProvider immutableWordsProvider
     */
    public function testImmutableWords($word)
    {
        $this->assertFalse(GeographicalNamesInflection::isMutable($word));
    }

    public function immutableWordsProvider()
    {
        return array(
            array('сша'),
            array('оаэ'),
        );
    }
}
